"use strict";(self.webpackChunkfront_end_interview_questions=self.webpackChunkfront_end_interview_questions||[]).push([[295],{8453:(e,n,i)=>{i.d(n,{R:()=>a});var s=i(6540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}},8637:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=i(4848),t=i(8453);const r={},a="A11Y (questions prepared)",o={id:"answers/a11y",title:"A11Y (questions prepared)",description:"1. How would you define inclusive and/or universal design?",source:"@site/docs/answers/a11y.md",sourceDirName:"answers",slug:"/answers/a11y",permalink:"/docs/answers/a11y",draft:!1,unlisted:!1,editUrl:"https://github.com/pathliving/front-end-interview-questions/docs/answers/a11y.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Fundamentals",permalink:"/docs/answers/fundamentals"}},l={},c=[];function d(e){const n={code:"code",h1:"h1",li:"li",ol:"ol",p:"p",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"a11y-questions-prepared",children:"A11Y (questions prepared)"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"How would you define inclusive and/or universal design?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Inclusive design aims to create products that are accessible and usable by as many people as possible, regardless of their abilities or disabilities. Universal design extends this concept to create environments and products that are inherently accessible to everyone, without the need for adaptation or specialized design."}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Name some ways responsive/mobile-first design can affect accessibility."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Responsive design ensures that content is accessible and usable on different screen sizes and devices. It can improve readability with flexible text sizes, ensure touch targets are large enough for users with motor impairments, and maintain logical reading order and navigation."}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"What are some user experience (UX) concerns to be aware of when using iconography in user interfaces (UI)?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Icons should be clear and universally understood. They should include text labels for accessibility. Overreliance on icons without text can confuse users, especially those with cognitive disabilities or those unfamiliar with the iconography."}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"What assistive technologies (ATs) are you familiar with (desktop and/or mobile)?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Common ATs include screen readers (e.g., JAWS, NVDA, VoiceOver), screen magnifiers, speech recognition software, alternative input devices (e.g., switch devices), and mobile accessibility features (e.g., TalkBack)."}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsx)(n.li,{children:"What do you feel is your skill level with these AT(s)?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Proficient: Familiar with basic operation, testing, and debugging accessibility issues using screen readers like NVDA and VoiceOver. Comfortable testing with browser-based tools like Axe and Lighthouse."}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsx)(n.li,{children:"What are skip links? What benefit(s) do they provide? What are some of their limitations?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Skip links are internal links that allow users to bypass repetitive content and navigate directly to the main content of the page. They are beneficial for keyboard and screen reader users. Limitations include being hidden visually until focused and requiring proper implementation to be effective."}),"\n",(0,s.jsxs)(n.ol,{start:"7",children:["\n",(0,s.jsx)(n.li,{children:"Describe instances where one might use a link or button."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Use links for navigation to different pages or sections within a page. Use buttons for actions like submitting a form, opening a modal, or triggering an event without navigation."}),"\n",(0,s.jsxs)(n.ol,{start:"8",children:["\n",(0,s.jsx)(n.li,{children:"What are some of the tools available to test the accessibility of a website or web application?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Tools include Axe, Lighthouse, WAVE, NVDA, JAWS, VoiceOver, Chrome Accessibility Developer Tools, and screen reader simulators."}),"\n",(0,s.jsxs)(n.ol,{start:"9",children:["\n",(0,s.jsx)(n.li,{children:"What is WCAG?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The Web Content Accessibility Guidelines (WCAG) are a set of guidelines developed by the W3C to make web content more accessible to people with disabilities. They cover a wide range of recommendations for making web content accessible."}),"\n",(0,s.jsxs)(n.ol,{start:"10",children:["\n",(0,s.jsx)(n.li,{children:"What are the differences between A, AA, and AAA compliance?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A: Basic web accessibility; essential accessibility features.\nAA: Deals with the biggest and most common barriers for disabled users; generally considered the standard for compliance.\nAAA: The highest and most complex level of web accessibility; not all content can conform to AAA."}),"\n",(0,s.jsxs)(n.ol,{start:"11",children:["\n",(0,s.jsx)(n.li,{children:"How can carousels be problematic for users with disabilities?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Carousels can cause issues for screen reader users, users with motor impairments, and users with cognitive disabilities due to auto-advancing slides, inconsistent focus, and non-intuitive navigation."}),"\n",(0,s.jsxs)(n.ol,{start:"12",children:["\n",(0,s.jsx)(n.li,{children:"How would you convince your Manager to allocate funds for an accessibility audit?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Emphasize the legal implications of non-compliance (e.g., ADA lawsuits), the potential market reach of accessible sites, and the ethical responsibility of inclusivity. Highlight that accessibility improvements can benefit all users, leading to better overall UX and customer satisfaction."}),"\n",(0,s.jsxs)(n.ol,{start:"13",children:["\n",(0,s.jsx)(n.li,{children:"Describe a situation where a coworker may have been resistant to accessibility or inclusive design best practices."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A common scenario is a coworker believing that accessibility is too time-consuming or costly. In such cases, I would demonstrate quick wins and easy fixes, present case studies showing the positive impact on business and users, and advocate for building accessibility into the workflow to save time in the long run."}),"\n",(0,s.jsxs)(n.ol,{start:"14",children:["\n",(0,s.jsx)(n.li,{children:"If a client/stakeholder doesn\u2019t want to pay for accessibility what would you do?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"I would educate them on the legal risks, potential market reach, and the ethical importance of accessibility. Present examples of successful businesses that have benefited from accessible designs and offer phased approaches to spread out costs."}),"\n",(0,s.jsxs)(n.ol,{start:"15",children:["\n",(0,s.jsx)(n.li,{children:"What methods can you use to find an element\u2019s accessible name?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Use browser developer tools to inspect the element\u2019s ARIA attributes, associated labels, or text content. Tools like Axe and Lighthouse can also help identify accessible names."}),"\n",(0,s.jsxs)(n.ol,{start:"16",children:["\n",(0,s.jsx)(n.li,{children:"What is the accessibility tree?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The accessibility tree is a structure built by the browser that represents the accessibility information of the DOM. It is used by assistive technologies to interpret and interact with the web content."}),"\n",(0,s.jsxs)(n.ol,{start:"17",children:["\n",(0,s.jsx)(n.li,{children:"Why is it important to allow the viewport to be resized, and/or zoomed?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Allowing viewport resizing and zooming ensures that users with low vision can adjust the text size and layout to suit their needs, improving readability and overall accessibility."}),"\n",(0,s.jsxs)(n.ol,{start:"18",children:["\n",(0,s.jsx)(n.li,{children:"What kind of elements can title attributes be used on? What sort of information is appropriate for use with the title attribute?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Title attributes can be used on most HTML elements. They provide supplementary information that appears as a tooltip on hover. However, they should not be relied upon for essential information, as they are not always accessible to screen readers."}),"\n",(0,s.jsxs)(n.ol,{start:"19",children:["\n",(0,s.jsx)(n.li,{children:"Provide an example of when you might need to add a description to an element."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Adding a description to a form input that requires specific instructions, such as a date input field with a required format, can help users understand how to complete the form correctly."}),"\n",(0,s.jsxs)(n.ol,{start:"20",children:["\n",(0,s.jsx)(n.li,{children:"What is a focus trap, or focus trapping? Describe an instance of when you\u2019d need focus trapping."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Focus trapping ensures that keyboard focus stays within a modal or dropdown until the user closes it. This is essential for dialogs and popups to prevent users from accidentally navigating outside the element and losing context."}),"\n",(0,s.jsxs)(n.ol,{start:"21",children:["\n",(0,s.jsx)(n.li,{children:"Describe a situation where the tabindex attribute would be useful. Provide an example of when using the tabindex attribute can cause problems."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"tabindex is useful for creating a custom tab order or making non-interactive elements focusable. Problems arise when overused or used incorrectly, leading to a confusing or illogical focus order."}),"\n",(0,s.jsxs)(n.ol,{start:"22",children:["\n",(0,s.jsx)(n.li,{children:"What are landmark regions and how can they be useful?"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Landmark regions (e.g., ",(0,s.jsx)(n.code,{children:"<header>, <nav>, <main>, <footer>"}),") help screen reader users navigate the page structure quickly and easily by providing semantic regions."]}),"\n",(0,s.jsxs)(n.ol,{start:"23",children:["\n",(0,s.jsx)(n.li,{children:"In what situations might you use a toggle button, vs a switch control, vs a checkbox?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Use toggle buttons for binary states in a user interface (e.g., play/pause). Use switches for on/off states (e.g., turning settings on or off). Use checkboxes for selecting multiple options from a list."}),"\n",(0,s.jsxs)(n.ol,{start:"24",children:["\n",(0,s.jsx)(n.li,{children:"Describe methods to hide content and why you might do so: From all users. From only screen reader users. From sighted users, but not screen reader users."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'To hide from all users: display: none or visibility: hidden.\nTo hide from screen readers: aria-hidden="true".\nTo hide from sighted users but not screen readers: position: absolute; left: -9999px; or clip-path: inset(50%).'}),"\n",(0,s.jsxs)(n.ol,{start:"25",children:["\n",(0,s.jsx)(n.li,{children:"Provide examples of common incorrect usage of ARIA attributes. Aside from screen readers, what other assistive technologies can be affected by use of ARIA? How?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'Incorrect usage: Using aria-hidden="true" on focusable elements, or misusing roles that don\u2019t match the element\u2019s purpose. ARIA attributes can affect other ATs like braille displays and voice recognition software by providing misleading information.'}),"\n",(0,s.jsxs)(n.ol,{start:"26",children:["\n",(0,s.jsx)(n.li,{children:'What is the difference between the following attributes: hidden, aria-hidden="true" and role="presentation" or role="none"?'}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'hidden: Completely hides content from all users.\naria-hidden="true": Hides content from screen readers but not visually.\nrole="presentation" or role="none": Removes semantic meaning from an element, making it ignored by screen readers but still visible.'}),"\n",(0,s.jsxs)(n.ol,{start:"27",children:["\n",(0,s.jsx)(n.li,{children:"Describe instances where you might need to use aria-live."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Use aria-live for dynamic content updates, such as live news feeds, chat messages, or notifications, to inform screen reader users about changes."}),"\n",(0,s.jsxs)(n.ol,{start:"28",children:["\n",(0,s.jsx)(n.li,{children:"What values (such as assertive or polite) might you give the attribute in different situations?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'aria-live="polite": For non-critical updates (e.g., new messages in a chat).\naria-live="assertive": For urgent updates that require immediate attention (e.g., error messages).'}),"\n",(0,s.jsxs)(n.ol,{start:"29",children:["\n",(0,s.jsx)(n.li,{children:"How would you mark-up an icon font or SVG that was for decorative purposes?"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:['Use aria-hidden="true" to ensure screen readers ignore it. If using ',(0,s.jsx)(n.code,{children:"<svg>"}),', add role="img" and an empty title or desc element for extra clarity.']}),"\n",(0,s.jsxs)(n.ol,{start:"30",children:["\n",(0,s.jsx)(n.li,{children:"Is CSS pseudo content understood by screen readers?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Generally, no. Screen readers do not interpret content added via CSS pseudo-elements (::before and ::after), so it should not be used for important information."}),"\n",(0,s.jsxs)(n.ol,{start:"31",children:["\n",(0,s.jsx)(n.li,{children:"What is the purpose of the alt attribute for images? Can you describe the effect of an empty alt, and/or the lack of the attribute, on an image?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'The alt attribute provides alternative text for images, which is read by screen readers. An empty alt (alt="") indicates the image is decorative, and screen readers will ignore it. Missing alt can cause screen readers to read the image\'s file name or other irrelevant information.'}),"\n",(0,s.jsxs)(n.ol,{start:"32",children:["\n",(0,s.jsx)(n.li,{children:"In what instances might an empty alt or no alt be appropriate?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Use an empty alt for purely decorative images. Avoid omitting alt entirely, as it leads to poor accessibility practices."}),"\n",(0,s.jsxs)(n.ol,{start:"33",children:["\n",(0,s.jsx)(n.li,{children:"How might alternative text for an image vary, depending on the context the image is used in?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:'Alternative text should describe the image\u2019s function and context. For instance, an image of a graph might have alternative text like "Sales data from 2020 to 2023" when used in a report, but "Company performance" when used on a homepage.'}),"\n",(0,s.jsxs)(n.ol,{start:"34",children:["\n",(0,s.jsx)(n.li,{children:"Since svgs don\u2019t accept the alt attribute, how can one provide alternative text for these graphics?"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.code,{children:"<title>"})," and ",(0,s.jsx)(n.code,{children:"<desc>"})," elements within the SVG, and reference them with aria-labelledby."]}),"\n",(0,s.jsxs)(n.ol,{start:"35",children:["\n",(0,s.jsx)(n.li,{children:"Do you need to supply an image an alt attribute if used within a figure with a figcaption?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Yes, the alt attribute should still be used to provide a brief description, with the figcaption offering additional context."}),"\n",(0,s.jsxs)(n.ol,{start:"36",children:["\n",(0,s.jsx)(n.li,{children:"Describe the steps you take in reviewing or auditing a website or application for accessibility?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Steps include running automated tools (e.g., Axe), manual keyboard navigation testing, checking color contrast, using screen readers for functional testing, and validating HTML for proper use of ARIA and semantic elements."}),"\n",(0,s.jsxs)(n.ol,{start:"37",children:["\n",(0,s.jsx)(n.li,{children:"Describe an instance where an automated test would not flag a blatant accessibility error?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Automated tests might miss issues like poor descriptive text for links or buttons, or contextual problems where a visually hidden element lacks necessary ARIA attributes for proper screen reader interaction."}),"\n",(0,s.jsxs)(n.ol,{start:"38",children:["\n",(0,s.jsx)(n.li,{children:"When should you use or recommend ARIA roles or attributes to solve an accessibility issue?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Use ARIA roles and attributes when native HTML elements and attributes do not provide the necessary semantic information or interactivity required for accessibility."}),"\n",(0,s.jsxs)(n.ol,{start:"39",children:["\n",(0,s.jsx)(n.li,{children:"Describe your process for figuring out if an accessibility bug is due to a developer, browser, or assistive technology error?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Isolate the issue by testing across different browsers, devices, and assistive technologies. Check the HTML and ARIA implementation for correctness. Refer to documentation and community forums for known issues with specific tools."}),"\n",(0,s.jsxs)(n.ol,{start:"40",children:["\n",(0,s.jsx)(n.li,{children:"What is the difference between legend, caption, and label elements? What are their similarities?"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"<legend>"}),": Describes the content of a ",(0,s.jsx)(n.code,{children:"<fieldset>"}),".\n",(0,s.jsx)(n.code,{children:"<caption>"}),": Provides a title or description for a ",(0,s.jsx)(n.code,{children:"<table>"}),".\n",(0,s.jsx)(n.code,{children:"<label>"}),": Associates a text description with a form control.\nSimilarities: All provide context and improve accessibility by making it clear what certain content or controls refer to."]}),"\n",(0,s.jsxs)(n.ol,{start:"41",children:["\n",(0,s.jsx)(n.li,{children:"Describe the purpose of heading and header elements, and how they are useful in websites and applications."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Headings (",(0,s.jsx)(n.code,{children:"<h1>"})," to ",(0,s.jsx)(n.code,{children:"<h6>"}),") structure content hierarchically, aiding navigation for screen reader users. ",(0,s.jsx)(n.code,{children:"<header>"})," is a semantic element indicating introductory content or navigational aids. Both improve the semantic structure and accessibility of a webpage."]}),"\n",(0,s.jsxs)(n.ol,{start:"42",children:["\n",(0,s.jsx)(n.li,{children:"Describe how you\u2019d handle managing keyboard focus within a single page web app (SPA) when changing routes."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Ensure focus moves to a relevant heading or the main content area when the route changes. Use ARIA live regions or focus management techniques to inform users of the change."}),"\n",(0,s.jsxs)(n.ol,{start:"43",children:["\n",(0,s.jsx)(n.li,{children:"Name an ARIA attribute that requires either a child/parent relationship or a pairing role."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"aria-labelledby requires a pairing with the ID of the element it references. aria-controls requires a relationship with the controlled element."}),"\n",(0,s.jsxs)(n.ol,{start:"44",children:["\n",(0,s.jsx)(n.li,{children:"What is your understanding of \u201caccessible name computation\u201d and how it affects modifying the way screen readers announce certain content?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Accessible name computation involves determining the name of an element using its associated label, ARIA attributes, and content. Proper computation ensures that screen readers provide meaningful information to users."}),"\n",(0,s.jsxs)(n.ol,{start:"45",children:["\n",(0,s.jsx)(n.li,{children:"What are some issues with modifying normal scrolling behavior? For example: infinite scrolling or scrolljacking."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Modifying scrolling can confuse users, make navigation difficult, and disrupt screen reader users. Infinite scrolling can trap keyboard and screen reader users, while scrolljacking can disorient users and reduce control."}),"\n",(0,s.jsxs)(n.ol,{start:"46",children:["\n",(0,s.jsx)(n.li,{children:"Some ARIA widgets are presently best supported on devices with physical keyboard, rather than mobile/touch interfaces. Are you aware of any widgets that would be described this way, and why?"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"ARIA widgets like tree views or complex grid structures are often better supported on keyboards due to the reliance on keyboard events for navigation and interaction. Touch interfaces may not provide the same level of interaction fidelity or event handling capabilities."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);